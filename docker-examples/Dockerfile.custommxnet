#
# This example Dockerfile illustrates a method to apply
# patches to the source code in NVIDIA's MXNet
# container image and to rebuild MXNet.  The RUN command
# included below will rebuild MXNet in the same way as
# it was built in the original image.
#
# By applying customizations through a Dockerfile and
# `docker build` in this manner rather than modifying the
# container interactively, it will be straightforward to
# apply the same changes to later versions of the MXNet
# container image.
#
# https://docs.docker.com/engine/reference/builder/
#
FROM nvcr.io/nvidia/mxnet:19.05-py3

# Bring in changes from outside container to /tmp
# (assumes my-mxnet-modifications.patch is in same directory as Dockerfile)
COPY my-mxnet-modifications.patch /tmp

# Change working directory to MXNet source path
WORKDIR /opt/mxnet

# Apply modifications
RUN patch -p1 < /tmp/my-mxnet-modifications.patch

# Rebuild MXNet
RUN make -j$(nproc) && \
    mv lib/libmxnet.so /usr/local/lib && \
    ldconfig && \
    make clean && \
    cd python && \
    pip install --no-cache-dir -e .

# Reset default working directory
WORKDIR /workspace

